package model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import com.fasterxml.jackson.annotation.JsonValue;

import java.util.UUID;

@DynamoDBTable(tableName = "Transactions")
public class Transaction {
    private UUID id;
    private TransactionType type;
    private Account payer;
    private Account payee;
    private String description;
    private double amount;

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public UUID getId() {
        return id;
    }

    public void setId(UUID id) {
        this.id = id;
    }

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = TransactionTypeConverter.class)
    public TransactionType getType() {
        return type;
    }

    public void setType(TransactionType type) {
        this.type = type;
    }

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = AccountConverter.class)
    public Account getPayer() {
        return payer;
    }

    public void setPayer(Account payer) {
        this.payer = payer;
    }

    @DynamoDBAttribute
    @DynamoDBTypeConverted(converter = AccountConverter.class)
    public Account getPayee() {
        return payee;
    }

    public void setPayee(Account payee) {
        this.payee = payee;
    }

    @DynamoDBAttribute
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    @DynamoDBAttribute
    public double getAmount() {
        return amount;
    }

    public void setAmount(double amount) {
        this.amount = amount;
    }

    public enum TransactionType {
        IBAN_TO_IBAN("IBAN to IBAN", 0),
        IBAN_TO_WALLET("IBAN to wallet", 1),
        WALLET_TO_IBAN("Wallet to IBAN", 2),
        WALLET_TO_WALLET("Wallet to wallet", 3);

        private String name;
        private Integer id;

        TransactionType(String name, Integer id) {
            this.name = name;
            this.id = id;
        }

        public static TransactionType getById(Integer id) {
            for (TransactionType transactionType : values()) {
                if (transactionType.getId().equals(id)) {
                    return transactionType;
                }
            }
            return null;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        @JsonValue
        public Integer getId() {
            return id;
        }

        public void setId(Integer id) {
            this.id = id;
        }
    }
}

